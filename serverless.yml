service: serverless-http-api-dynamodb
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  lambdaHashingVersion: '20201221'
  environment:
    DYNAMODB_TABLE: account-${sls:stage}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: putNewAccount.putNewAccount
    events:
      - httpApi:
          path: /
          method: post

  # get:
  #   handler: get.get
  #   events:
  #     - httpApi:
  #         path: /{id}
  #         method: get

  # update:
  #   handler: update.update
  #   events:
  #     - httpApi:
  #         path: /{id}
  #         method: put

  # delete:
  #   handler: delete.delete
  #   events:
  #     - httpApi:
  #         path: /{id}
  #         method: delete

resources:
  Resources:
    MeterReadDBTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: name
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
